{"componentChunkName":"component---src-templates-blog-post-js","path":"/set-up-githubactions/","result":{"data":{"site":{"siteMetadata":{"title":"What I Thought","description":"@keensyoのブログです。"}},"markdownRemark":{"id":"cd9dea9b-fbfd-5e58-9aee-cd6fc8ee8133","excerpt":"このブログが Github Pages を利用していることは先の記事にも書いた。\nブログを構成するソースコードは Github Pages を利用しているリポジトリとは別リポジトリに存在していて、ちょっと管理が面倒な状態になっている。\nであれば(？)、Github Actions…","html":"<p>このブログが Github Pages を利用していることは<a href=\"https://keensyo.github.io/createblog/\">先の記事</a>にも書いた。</br>\nブログを構成するソースコードは Github Pages を利用しているリポジトリとは別リポジトリに存在していて、ちょっと管理が面倒な状態になっている。</br>\nであれば(？)、Github Actions を利用して別リポジトリで管理するソースコードを push したときに keensyo.github.io にデプロイされるようになれば、</br>\nすべて Github で完結して少し楽になりそうだと思い、Github Actions を導入した。</br>\n裏目的として、Github Actions を使ってみたかったというのはある…</br></p>\n<h3>状況</h3>\n<p>2 つのリポジトリが存在する。</p>\n<ol>\n<li>ブログを構成するソースコード(GatsbyJS)を管理しているリポジトリ(以下、SourceRepo)</li>\n<li>Github Pages がホストされているリポジトリ(以下、PagesRepo)</li>\n</ol>\n<h3>やりたいこと</h3>\n<ul>\n<li>SourceRepo から PagesRepo へデプロイしたい</li>\n</ul>\n<h3>実現のために考えたこと</h3>\n<ul>\n<li>SourceRepo に変更が入ったとき(push されたとき)はブログに変更を加えたいとき</li>\n<li>そのため、SourceRepo への変更を検知して PagesRepo にデプロイしたい</li>\n<li>変更を検知=変更の悪影響が無いかテストを回したい(Integration Test をしたい)</li>\n<li>テストを回したあとにデプロイをする(Deploy したい)</li>\n<li>CI/CD を仕組み化すれば実現できそう →Github Actions を使えばよさそう</li>\n</ul>\n<h3>何をやったか</h3>\n<p>まず、Github Actions は名前しか知らなかったので以下でざっくり勉強した。</br>\n<a href=\"https://docs.github.com/ja/actions/learn-github-actions\">Github Actions について学ぶ</a></br>\n<a href=\"https://knowledge.sakura.ad.jp/23478/\">Github の新機能「Github Actions」で試す CI/CD</a></br>\n公式ドキュメントは網羅的でよいが、概要をつかむには後者の記事が役立った。</p>\n<p>概要を掴んだあとは、とにかくやり方を調べた。</br>\nとくにリポジトリをまたいだデプロイについては、以下の記事が大変参考になった。</br>\n<a href=\"https://3nan3.github.io/post/2019122201_github_actions/\">Github Actions で別のリポジトリに git push する</a></br>\n認証周りも丁寧に解説いただいていて、なるほどなるほどと読み進めていたが、Github Actions で肝となる YAML で詰まった。</br>\n上記ブログだと、Hugo を利用しており記載いただいている YAML を微妙に読み替える必要があったのだった。</br>\nそんなときに<a href=\"https://qiita.com/peaceiris/items/2f6d83802f2aefa66f9d\">Gatsby のサイトを Github Actions で Github Pages にデプロイ</a>というドンピシャな記事を見つけ、めちゃくちゃに参考にさせてもらった。</br>\n<a href=\"https://github.com/peaceiris/actions-gh-pages\">Github</a>にも丁寧な README があり、本筋じゃないけど SSH の Deploy Key 作成はこの README が無かったらうまくできていなかったと思う。</br></p>\n<p>というわけで、インターネットにお世話になり、無事 Github Actions で CI/CD できるようになった。</p>\n<h3>どこでハマったか</h3>\n<h5><code class=\"language-text\">github_token</code>ではなく<code class=\"language-text\">deploy_key</code>と書かなくてはいけないこと</h5>\n<p>YAML の話で、参考にした記事だと以下のように書かれている。</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> deploy\n  <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> peaceiris/actions<span class=\"token punctuation\">-</span>gh<span class=\"token punctuation\">-</span>pages@v3\n  <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">github_token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GITHUB_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>今回のように、リポジトリをまたいだデプロイの際は、<code class=\"language-text\">external_repository</code>という環境変数を設定しここにデプロイしたいリポジトリ名を書く必要がある。</br>\nそれと同時に、<code class=\"language-text\">github_token</code>ではなく<code class=\"language-text\">deploy_key</code>と変えなくてはいけない。これも上で紹介している README に書いてあるのだが、はじめは github<em>token と書いて混乱していた。</br>\nさらにいうと、${{ secrets.GITHUB</em>TOKEN }}もそのまま GITHUB_TOKEN と書いていたが、自分が設定している名前を使えばいいことにも最初は気づかなかった…</br>\nイメージとしてはこんな感じになる。</br></p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> deploy\n  <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> peaceiris/actions<span class=\"token punctuation\">-</span>gh<span class=\"token punctuation\">-</span>pages@v3\n  <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">deploy_key</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.FOOBAR <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token key atrule\">external_repository</span><span class=\"token punctuation\">:</span> username/username.github.io</code></pre></div>\n<h4>ssh の公開鍵と秘密鍵の設定を間違っていたこと</h4>\n<p>取り違えていたとかではなく、含める文字列が足りていなかった。</br>\n何度 git push しても<code class=\"language-text\">Action failed with &quot;The process &#39;/usr/bin/ssh-add&#39; failed with exit code 1&quot;</code>と出てしまいビルドエラー。</br>\nなんで ssh-add できないのか大いに頭を悩ませていたが、以下の記事を見つけ解決した。</br>\n<a href=\"https://forums.fast.ai/t/fastpages-ssh-issues-solved/65948\">[fastpages]SSH issues? - SOLVED</a></p>\n<p>この質問者と全く同じことをやっていて、海外に同じことをやっている人がいる〜 というのと、オープンな場所で質問してくれてて Big Thanks!!!という気持ち。</br>\nssh 全くわからないということが否が応でもわかってしまったので、この後 ssh について勉強しました。</p>\n<h3>おわりに</h3>\n<p>CI/CD といろんなトラブルを経験できてよかった。</br>\n平日の夜にちまちまやっていたので時間はかかってしまったが、work-flow に緑のチェックマークがつくのは嬉しい。</br>\n気が向いたらもうちょっと工夫してみようと思う。</p>","frontmatter":{"title":"Github Actionsでブログをデプロイする","date":"February 13, 2021"}},"previous":{"fields":{"slug":"/about-traveling/"},"frontmatter":{"title":"どこかに行きたい"}},"next":{"fields":{"slug":"/work-from-home/"},"frontmatter":{"title":"生活と仕事の密結合"}}},"pageContext":{"id":"cd9dea9b-fbfd-5e58-9aee-cd6fc8ee8133","previousPostId":"6c5d3419-9d70-587a-bdc7-79b79aa6bbd5","nextPostId":"e1d6d131-bcb6-5e2f-b157-611441cad8fa"}},"staticQueryHashes":["2841359383"]}